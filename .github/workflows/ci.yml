name: CI Pipeline

on:
  push:
    branches:
      - main
      - backup-main
  pull_request:
    branches:
      - main
      - backup-main

jobs:
  lint:
    name: Lint Frontend & Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: frontend

      - name: Install Backend Dependencies
        run: npm install
        working-directory: backend

      - name: Run ESLint Fix (Frontend)
        run: npm run lint:fix
        working-directory: frontend

      - name: Run ESLint Fix (Backend)
        run: npm run lint:fix
        working-directory: backend

  backend-test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install Dependencies
        run: npm install

      - name: Load Backend Secrets
        run: |
          echo "MONGO_URI=${{ secrets.BACKEND_MONGO_URI }}" >> $GITHUB_ENV
          echo "MONGO_USER=${{ secrets.BACKEND_MONGO_USER }}" >> $GITHUB_ENV
          echo "MONGO_PASS=${{ secrets.BACKEND_MONGO_PASS }}" >> $GITHUB_ENV
          echo "MONGO_DB_NAME=${{ secrets.BACKEND_MONGO_DB_NAME }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.BACKEND_PORT }}" >> $GITHUB_ENV
          echo "CLERK_SECRET_KEY=${{ secrets.BACKEND_CLERK_SECRET_KEY }}" >> $GITHUB_ENV

      - name: Run All Backend Tests
        env:
          NODE_ENV: test
        run: npm run test-all

  frontend-test:
    name: Run Frontend Tests
    runs-on: macos-latest # MacOS is required for running Android Emulator
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm install

      - name: Install Maestro
        run: curl -Ls "https://get.maestro.mobile.dev" | bash

      - name: Add Maestro to PATH
        run: |
          export PATH="$PATH:$HOME/.bash_profile/.maestro/bin:$HOME/.zshrc/.maestro/bin"
          echo "PATH updated to include Maestro: $PATH"

      - name: Check Maestro
        run: maestro --version

      - name: Start Expo Server
        run: npx expo start --tunnel &
        env:
          EXPO_NO_DEBUG: 1
          EXPO_USE_LOCAL: 1
        
      - name: Wait for Expo to Start
        run: sleep 20  # Ensure Expo has time to start
      
      - name: Get expo url
        run: |
          echo "EXPO_URL=exp://localhost:8081" >> $GITHUB_ENV

      #- name: Get Expo Dev Server URL
        #run: |
          #echo "EXPO_URL=$(npx expo url)" >> $GITHUB_ENV

      - name: Debug Expo URL
        run: echo "Expo is running at $EXPO_URL"

      - name: Start Android Emulator
        run: |
          echo "Starting Android Emulator..."
          nohup emulator -avd test-emulator -no-audio -no-window -gpu swiftshader_indirect &
          sleep 30  # Ensure emulator has time to start

      - name: Verify Emulator is Available
        run: adb devices

      - name: Run Maestro E2E Tests
        run: maestro test e2e/login.yml
        env:
          EXPO_URL: ${{ env.EXPO_URL }}

